package net.pis.wsserver;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.5 2017-04-14T18:17:57.609+09:00
 * Generated source version: 3.1.5
 *
 */
@WebServiceClient(name = "Request",
    wsdlLocation = "https://devneobill.smartbill.co.kr/Request.svc?wsdl",
    targetNamespace = "http://tempuri.org/")
public class Request extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "Request");
    public final static QName BasicHttpBindingIRequest = new QName("http://tempuri.org/", "BasicHttpBinding_IRequest");
    public final static QName BasicHttpBindingIRequest1 = new QName("http://tempuri.org/", "BasicHttpBinding_IRequest1");

    static {
        URL url = null;
        try {
            url = new URL("https://devneobill.smartbill.co.kr/Request.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Request.class.getName())
                .log(java.util.logging.Level.INFO,
                    "Can not initialize the default wsdl from {0}", "https://devneobill.smartbill.co.kr/Request.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Request(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Request(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Request() {
        super(WSDL_LOCATION, SERVICE);
    }

    public Request(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Request(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Request(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns IRequest
     */
    @WebEndpoint(name = "BasicHttpBinding_IRequest")
    public IRequest getBasicHttpBindingIRequest() {
        return super.getPort(BasicHttpBindingIRequest, IRequest.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     *                 configure on the proxy. Supported features not in the
     *                 <code>features</code> parameter will have their default
     *                 values.
     * @return returns IRequest
     */
    @WebEndpoint(name = "BasicHttpBinding_IRequest")
    public IRequest getBasicHttpBindingIRequest(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIRequest, IRequest.class, features);
    }

    /**
     *
     * @return returns IRequest
     */
    @WebEndpoint(name = "BasicHttpBinding_IRequest1")
    public IRequest getBasicHttpBindingIRequest1() {
        return super.getPort(BasicHttpBindingIRequest1, IRequest.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     *                 configure on the proxy. Supported features not in the
     *                 <code>features</code> parameter will have their default
     *                 values.
     * @return returns IRequest
     */
    @WebEndpoint(name = "BasicHttpBinding_IRequest1")
    public IRequest getBasicHttpBindingIRequest1(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIRequest1, IRequest.class, features);
    }

}
